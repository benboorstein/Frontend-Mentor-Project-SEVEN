/* CSS selectors available: https://www.w3schools.com/cssref/css_selectors.asp. */

/* For device widths: https://viewportsizer.com/devices/. */

/* Remember "tab test" for accessibility. */

/************************************************************
********** For Mobile/Narrow Viewport **********
************************************************************/

/* Remember I worked with FEM's mobile demo at zoom 30. */

/* Always use this, as Brian Holt advises. It makes the size ("width", for example) of every element equal to the element's content + its padding + its border, and not inclusive of margin of course. */
* {
  box-sizing: border-box;
}

html, body {
  margin: 0;
  padding: 0;
}

body {
  font-family: 'Spartan', sans-serif;
  background-color: hsl(180, 52%, 96%);
}

/****************************************
header
****************************************/

header img {
  position: relative; /* Why is this needed here? Because of #2 here: https://www.freecodecamp.org/news/4-reasons-your-z-index-isnt-working-and-how-to-fix-it-coder-coder-6bc05f103e6c/ */
  min-width: 100%;
  max-height: 200px;
  background-color: hsl(180, 29%, 50%);
  z-index: -1;
}

/****************************************
main
****************************************/

main {
  padding: 0 25px 0 25px;
}

#filter {
  background-color: white;
  margin-bottom: 0;
  margin-top: -30px;
  border-radius: 6px;
  box-shadow:
        /* top: */
            0px -14px 11px -7px rgba(91, 164, 164, 0.04), /* this color is hsl(180, 29%, 50%) from style-guide */    
        /* left and bottom: */
            -3px 20px 35px 0px rgba(91, 164, 164, 0.01), 
        /* right and bottom: */
            3px 35px 35px 0px rgba(91, 164, 164, 0.01),
        /* bottom (and a bit of right): */
            3px 35px 20px 0px rgba(91, 164, 164, 0.1),
        /* bottom: */
            2px 10px 12px 0px rgba(91, 164, 164, 0.2);
  /* dividing this filter/container into two parts, and vertically centering the elements inside */
  display: flex;
  justify-content: space-between;
  align-items: center;
}

#filter-tags-ul {
  padding: 0;
  margin-left: 12px;
  width: 50%;
  display: flex;
  flex-wrap: wrap;
}

.filter-tag-li {
  margin: 6px 12px 6px 0;
}

#clear-filter-ul {
  width: 50%;
  /* moving the 'Clear' button over to the right */
  display: flex;
  justify-content: flex-end;
}

#clear-filter-ul li {
  margin-right: 12px;
}

#job-listings {
  padding: 0;
  margin-top: 95px;
}

li {
  list-style-type: none;
}

.job-listing {
  margin-top: 75px;
  background-color: white;
  border-radius: 6px;
  box-shadow:
        /* top: */
            0px -14px 11px -7px rgba(91, 164, 164, 0.04), /* this color is hsl(180, 29%, 50%) from style-guide */    
        /* left and bottom: */
            -3px 20px 35px 0px rgba(91, 164, 164, 0.01), 
        /* right and bottom: */
            3px 35px 35px 0px rgba(91, 164, 164, 0.01),
        /* bottom (and a bit of right): */
            3px 35px 20px 0px rgba(91, 164, 164, 0.1),
        /* bottom: */
            2px 10px 12px 0px rgba(91, 164, 164, 0.2);
}

.logo {
  margin-top: -44px;
  margin-left: 45px;
}

.company-name {
  color: hsl(180, 29%, 50%);
  font-weight: 700;
  font-size: 17px;
}

.bubble-new, .bubble-featured {
  text-transform: uppercase;
  font-weight: 700;
  font-size: 14px;
  color: white;
  padding: 10px 11px 5px 11px;
  border-radius: 50px;
}

.bubble-new {
  background-color: hsl(180, 29%, 50%);
  margin-left: 18px;
}

.bubble-featured {
  background-color: black;
  margin-left: 6px;
}

.job-title a {
  color: black;
  text-decoration: none;
  font-size: 20px;
}

.three-details {
  font-weight: 500;
  font-size: 18px;
  color: #9d9d9d; /* color not provided by FEM */
  letter-spacing: -1px;
}

.tags {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
}

.tag {
  margin: 8px 16px 8px 0;
}

/* from another project - need to adapt to this project
Making a bullet point without any HTML for it.
.menu-items li:nth-of-type(3)::after {
  border: none;
  margin: 0;
  align-self: center;
  background-color: #ccd0d7;
  width: 6px;
  height: 6px;
  border-radius: 50%;
  margin-left: 38px;
}
*/


/* from another project - need to adapt to this project
Making a line without any HTML (e.g., <hr>) for it.
.menu-items li:nth-of-type(3)::after {
  cursor: auto;
  content: '';
  display: block;
  border-bottom: 1px solid #dee3eb;
  margin-top: 28px;
}
*/


/****************************************
footer
****************************************/

.attribution {
  text-align: center;
  font-size: 11px;
  margin-bottom: 0;
}

.attribution a {
  color: hsl(228, 45%, 44%); /*hsl(hue, saturation, lightness)*/
}

/************************************************************
********** For Desktop/Wide Viewport **********
************************************************************/

/*@media screen and (min-width: 850px) {*/ /* starting at width of 850px, the code below (which is only for CHANGES to the above code) will take effect. */

  /****************************************
  header
  ****************************************/


  /****************************************
  main
  ****************************************/


  /****************************************
  footer
  ****************************************/

/* } */

















/* KEEP THIS AS A REFERENCE:
parent {
  display: flex;    mandatory 
  flex-direction: ;    row (default) | row-reverse | column | column-reverse 
  justify-content: ;    flex-start (default) | flex-end | center | space-between | space-around | space-evenly 
  align-items: ;    flex-start | flex-end | center | (baseline) | stretch (default) 
  flex-wrap: ;    nowrap (default) | wrap | wrap-reverse 
  align-content: ;    flex-start | flex-end | center | space-between | space-around | stretch (default) 
}

child {
  align-self: ;    flex-start | flex-end | center | (baseline) | stretch (default)
  flex-grow: ;    0 is default 
  flex-shrink: ;    1 is default 
  flex-basis: ;    auto is default 
  order: ;    0 is default

  flex: [a number];    this is a way (instead of using percentages outside of Flexbox) to set relative sizes of elements. (This is how I THOUGHT flex-grow worked.)
}
*/